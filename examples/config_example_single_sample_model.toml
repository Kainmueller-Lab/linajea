train_input_shape = [ 7, 40, 148, 148,]
# train_input_shape = [ 7, 40, 260, 260,]
predict_input_shape = [ 7, 80, 260, 260,]
unet_style = "split"
num_fmaps = [12, 12]
# fmap_inc_factors = [4, 4, 8]
fmap_inc_factors = 4
downsample_factors = [[ 1, 2, 2,],
                      [ 1, 2, 2,],
                      [ 2, 2, 2,],]
# kernel_size_down = [[ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],]
kernel_size_down = [[ [3, 3, 3, 3], [3, 3, 3, 3],],
                    [ [3, 3, 3, 3], [3, 3, 3],],
                    [ [3, 3, 3], [3, 3, 3],],
                    [ [3, 3, 3], [3, 3, 3],],]
# kernel_size_down = [[ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3, 3],],
#                     [ [3, 3, 3, 3], [3, 3, 3, 3],],]
kernel_size_up = [[ [3, 3, 3], [3, 3, 3],],
                  [ [3, 3, 3], [3, 3, 3],],
                  [ [3, 3, 3], [3, 3, 3],],]
# constant_upsample = true
# upsampling = "pixel_shuffle"
# upsampling = "trilinear"
upsampling = "sep_transposed_conv"
average_vectors = false
# nms_window_shape = [ 3, 11, 11,]
nms_window_shape = [ 3, 9, 9,]
cell_indicator_weighted = 0.01
cell_indicator_cutoff = 0.01
# cell_indicator_weighted = true
train_only_cell_indicator = false
