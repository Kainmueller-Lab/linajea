[general]
logging = 20
db_host = "localhost"
seed = 42
setup_dir = "example_advanced"
sparse = false

[model]
train_input_shape = [ 7, 40, 148, 148,]
predict_input_shape = [ 7, 80, 260, 260,]
unet_style = "split"
num_fmaps = [12, 12]
fmap_inc_factors = 4
downsample_factors = [[ 1, 2, 2,],
                      [ 1, 2, 2,],
                      [ 2, 2, 2,],]
kernel_size_down = [[ [3, 3, 3, 3], [3, 3, 3, 3],],
                    [ [3, 3, 3, 3], [3, 3, 3],],
                    [ [3, 3, 3], [3, 3, 3],],
                    [ [3, 3, 3], [3, 3, 3],],]
kernel_size_up = [[ [3, 3, 3], [3, 3, 3],],
                  [ [3, 3, 3], [3, 3, 3],],
                  [ [3, 3, 3], [3, 3, 3],],]
upsampling = "sep_transposed_conv"
average_vectors = false
nms_window_shape = [ 3, 9, 9,]
cell_indicator_weighted = 0.01
cell_indicator_cutoff = 0.01
train_only_cell_indicator = false

[train]
val_log_step = 25
# radius for binary map -> *2 (in world units)
# in which to draw movement vectors (not used if use_radius)
object_radius = [ 0.1, 8.0, 8.0, 8.0,]
# upper bound for dist cell moved between two frames (needed for context)
move_radius = 25
# sigma for Gauss -> ~*4 (5 in z -> in 3 slices) (not used if use_radius)
rasterize_radius = [ 0.1, 5.0, 3.0, 3.0,]
cache_size = 1
movement_vectors_loss_transition_offset = 20000
movement_vectors_loss_transition_factor = 0.001
use_radius = true
max_iterations = 20
checkpoint_stride = 10
snapshot_stride = 5
profiling_stride = 10
use_auto_mixed_precision = true
use_swa = true
swa_every_it = false
swa_start_it = 49999
swa_freq_it = 1000

[train.job]
num_workers = 1

[train.normalization]
type = "minmax"
perc_min = "perc0_01"
perc_max = "perc99_99"
norm_bounds = [ 2000, 7500,]

[train.augment]
divisions = true
reject_empty_prob = 0.9
point_balance_radius = 75

# Augmentation
# check snapshots per dataset for good values!
[train.augment.elastic]
control_point_spacing = [ 5, 25, 25,]
jitter_sigma = [ 1, 1, 1,]
rotation_min = -45
rotation_max = 45
rotation_3d = false
subsample = 4
use_fast_points_transform = true

[train.augment.zoom]
factor_min = 0.75
factor_max = 1.5
spatial_dims = 2

[train.augment.shift]
prob_slip = 0.2
prob_shift = 0.2
sigma = [ 0, 4, 4, 4,]

[train.augment.intensity]
scale = [ 0.9, 1.1,]
shift = [ -0.001, 0.001,]

[train.augment.simple]
mirror = [ 2, 3,]
transpose = [ 2, 3,]

# [train.augment.noise_gaussian]
# var = [ 0.001,]

[train.augment.noise_saltpepper]
amount = [ 0.0001,]

[train.augment.noise_speckle]
var = [ 0.05,]

[train.augment.histogram]
range_low = 0.1
range_high = 1.0


[optimizerTorch]
optimizer = "Adam"
[optimizerTorch.kwargs]
lr = 5e-5
betas = [0.95, 0.999]
eps = 1e-8
amsgrad = false


[predict]
output_zarr_dir = "."
write_to_zarr = false
write_to_db = true
write_db_from_zarr = false
processes_per_worker = 1
[predict.job]
num_workers = 4


[extract]
block_size = [ 5, 512, 512, 512,]
[extract.edge_move_threshold]
50 = 45
1000 = 35
[extract.job]
num_workers = 1
queue = "local"


[solve]
from_scratch = true
greedy = false
check_node_close_to_roi = false
solver_type = "basic"
context = [2, 100, 100, 100]

[solve.parameters_search_grid]
weight_node_score =   [-13, -17, -21]
selection_constant =  [6, 9, 12]
track_cost =          [7,]
weight_division =     [-8, -11]
division_constant =   [6.0, 2.5]
weight_child =        [1.0, 2.0]
weight_continuation = [-1.0]
weight_edge_score =   [0.35]
val = [true]
block_size = [[15, 512, 512, 712]]
num_configs = 5

[solve.job]
num_workers = 1
queue = "local"


[evaluate]
from_scratch = true
[evaluate.parameters]
matching_threshold = 15
[evaluate.job]
num_workers = 1
queue = "local"



[train_data]
voxel_size = [ 1, 5, 1, 1,]

[[train_data.data_sources]]
exclude_times = [[60, 65], [75, 80]]
tracksfile = "mskcc_emb1_fr50-90_tracks.csv"
[train_data.data_sources.datafile]
filename = "mskcc_emb1_fr50-60_fr65-75_fr80-90.zip"
array = "raw"
[train_data.data_sources.roi]
offset = [ 50, 0, 0, 0,]
shape = [ 40, 205, 512, 512,]

[[train_data.data_sources]]
tracksfile = "mskcc_emb1_fr20-40_tracks.csv"
[train_data.data_sources.datafile]
filename = "mskcc_emb1_fr20-40.zip"
array = "raw"
[train_data.data_sources.roi]
offset = [ 20, 0, 0, 0,]
shape = [ 20, 205, 512, 512,]


[validate_data]
checkpoints = [ 10, 20,]
cell_score_threshold = 0.2
voxel_size = [ 1, 5, 1, 1,]

[[validate_data.data_sources]]
gt_db_name = "linajea_mskcc_emb2_fr30-45_gt"
tracksfile = "mskcc_emb2_fr30-45_tracks.csv"
[validate_data.data_sources.datafile]
filename = "mskcc_emb2_fr30-45.zip"
array = "raw"
[validate_data.data_sources.roi]
offset = [ 30, 0, 0, 0,]
shape = [ 15, 205, 512, 512,]

[[validate_data.data_sources]]
gt_db_name = "linajea_mskcc_emb2_fr50-65_gt"
tracksfile = "mskcc_emb2_fr50-65_tracks.csv"
[validate_data.data_sources.datafile]
filename = "mskcc_emb2_fr50-65.zip"
array = "raw"
[validate_data.data_sources.roi]
offset = [ 50, 0, 0, 0,]
shape = [ 15, 205, 512, 512,]


[test_data]
cell_score_threshold = 0.2
voxel_size = [ 1, 5, 1, 1,]

[[test_data.data_sources]]
gt_db_name = "linajea_mskcc_emb3_fr50-65_gt"
[test_data.data_sources.datafile]
filename = "mskcc_emb3_fr50-65.zip"
array = "raw"
[test_data.roi]
offset = [ 50, 0, 0, 0,]
shape = [ 15, 205, 512, 512,]