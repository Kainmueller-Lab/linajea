diff --git a/GurobiBackend.cpp b/GurobiBackend.cpp
index 812a836..74251f5 100644
--- a/GurobiBackend.cpp
+++ b/GurobiBackend.cpp
@@ -215,9 +215,6 @@ GurobiBackend::solve(Solution& x, std::string& msg) {
 		else
 			GRB_CHECK(GRBsetdblparam(modelenv, GRB_DBL_PAR_MIPGAP, _gap));
 
-		LOG_USER(gurobilog)
-				<< "using " << (_absoluteGap ? "absolute" : "relative")
-				<< " optimality gap of " << _gap << std::endl;
 	}
 
 	GRB_CHECK(GRBoptimize(_model));
diff --git a/ScipBackend.cpp b/ScipBackend.cpp
index 261f0d2..16fc62f 100644
--- a/ScipBackend.cpp
+++ b/ScipBackend.cpp
@@ -160,22 +160,22 @@ ScipBackend::addConstraint(const LinearConstraint& constraint) {
 void
 ScipBackend::setTimeout(double timeout) {
 
-	SCIP_CALL_ABORT(SCIPsetParam(_scip, "limits/time", &timeout));
+	SCIP_CALL_ABORT(SCIPsetRealParam(_scip, "limits/time", timeout));
 }
 
 void
 ScipBackend::setOptimalityGap(double gap, bool absolute) {
 
 	if (absolute)
-		SCIP_CALL_ABORT(SCIPsetParam(_scip, "limits/absgap", &gap));
+		SCIP_CALL_ABORT(SCIPsetRealParam(_scip, "limits/absgap", gap));
 	else
-		SCIP_CALL_ABORT(SCIPsetParam(_scip, "limits/gap", &gap));
+		SCIP_CALL_ABORT(SCIPsetRealParam(_scip, "limits/gap", gap));
 }
 
 void
 ScipBackend::setNumThreads(unsigned int numThreads) {
 
-	SCIP_CALL_ABORT(SCIPsetParam(_scip, "lp/threads", &numThreads));
+	SCIP_CALL_ABORT(SCIPsetIntParam(_scip, "lp/threads", numThreads));
 }
 
 bool
